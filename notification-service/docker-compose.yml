version: '3.8'

services:
  notification-service:
    build: .
    container_name: invory-notification-service
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - ALLOWED_ORIGINS=https://invory-b9a72.web.app
      - LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
      - ./firebase-service-account.json:/app/firebase-service-account.json:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - invory-network

  # Redis per caching (opzionale)
  redis:
    image: redis:7-alpine
    container_name: invory-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - invory-network

  # Nginx per reverse proxy (opzionale)
  nginx:
    image: nginx:alpine
    container_name: invory-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - notification-service
    restart: unless-stopped
    networks:
      - invory-network

volumes:
  redis-data:

networks:
  invory-network:
    driver: bridge 